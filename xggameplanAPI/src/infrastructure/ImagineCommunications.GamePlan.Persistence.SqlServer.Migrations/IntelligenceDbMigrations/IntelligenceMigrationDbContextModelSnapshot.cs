// <auto-generated />
using System;
using ImagineCommunications.GamePlan.Persistence.SqlServer.Migrations.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImagineCommunications.GamePlan.Persistence.SqlServer.Migrations.IntelligenceDbMigrations
{
    [DbContext(typeof(IntelligenceMigrationDbContext))]
    partial class IntelligenceMigrationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.GroupTransactionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CompletedDate");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EventCount");

                    b.Property<DateTime?>("ExecutedDate");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("GroupTransactionInfos");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageEntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MessageEntityTypes");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ExecutedDate");

                    b.Property<Guid>("GroupTransactionId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Priority");

                    b.Property<int?>("ProcessedBatchCount");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<int>("RetryCount");

                    b.Property<int>("State");

                    b.Property<int?>("TotalBatchCount");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("GroupTransactionId");

                    b.ToTable("MessageInfos");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessagePayload", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<byte[]>("Payload")
                        .IsRequired()
                        .HasColumnType("LongBlob");

                    b.HasKey("Id");

                    b.ToTable("MessagePayloads");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64);

                    b.Property<int?>("BatchSize");

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<int>("MessageEntityTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("Priority");

                    b.HasKey("Id");

                    b.HasIndex("MessageEntityTypeId");

                    b.ToTable("MessageTypes");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageInfo", b =>
                {
                    b.HasOne("ImagineCommunications.Gameplan.Integration.Data.Entities.GroupTransactionInfo")
                        .WithMany("Messages")
                        .HasForeignKey("GroupTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessagePayload", b =>
                {
                    b.HasOne("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageInfo")
                        .WithOne()
                        .HasForeignKey("ImagineCommunications.Gameplan.Integration.Data.Entities.MessagePayload", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageType", b =>
                {
                    b.HasOne("ImagineCommunications.Gameplan.Integration.Data.Entities.MessageEntityType", "MessageEntityType")
                        .WithMany("MessageTypes")
                        .HasForeignKey("MessageEntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
