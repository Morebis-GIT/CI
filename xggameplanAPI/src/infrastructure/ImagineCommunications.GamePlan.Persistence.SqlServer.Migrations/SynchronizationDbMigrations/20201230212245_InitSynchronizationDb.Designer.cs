// <auto-generated />
using System;
using ImagineCommunications.GamePlan.Persistence.SqlServer.Migrations.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImagineCommunications.GamePlan.Persistence.SqlServer.Migrations.SynchronizationDbMigrations
{
    [DbContext(typeof(SynchronizationMigrationDbContext))]
    [Migration("20201230212245_InitSynchronizationDb")]
    partial class InitSynchronizationDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ImagineCommunications.Gameplan.Synchronization.SqlServer.Entities.SynchronizationObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("OwnerCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("Varbinary(16)");

                    b.Property<int?>("ServiceId");

                    b.HasKey("Id");

                    b.ToTable("SynchronizationObjects");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Synchronization.SqlServer.Entities.SynchronizationObjectOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CapturedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTime?>("ReleasedDate");

                    b.Property<Guid>("SynchronizationObjectId");

                    b.HasKey("Id");

                    b.HasIndex("SynchronizationObjectId");

                    b.ToTable("SynchronizationObjectOwners");
                });

            modelBuilder.Entity("ImagineCommunications.Gameplan.Synchronization.SqlServer.Entities.SynchronizationObjectOwner", b =>
                {
                    b.HasOne("ImagineCommunications.Gameplan.Synchronization.SqlServer.Entities.SynchronizationObject")
                        .WithMany("Owners")
                        .HasForeignKey("SynchronizationObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
