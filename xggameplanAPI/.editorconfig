# See these pages for details.
#--
# https://EditorConfig.org
# https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options
# https://marketplace.visualstudio.com/items?itemName=MadsKristensen.EditorConfig
#--

root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
trim_trailing_whitespace = true

# New line preferences
end_of_line = crlf
insert_final_newline = true


# Vertical guidelines
guidelines = 80, 100


#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false : warning
dotnet_style_qualification_for_field = false : warning
dotnet_style_qualification_for_method = false : warning
dotnet_style_qualification_for_property = false : warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = false:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity : silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity : silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary : silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity : silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members : warning

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true : silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true : silent
dotnet_style_prefer_conditional_expression_over_return = true : silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

#### C# Coding Conventions ####

# var preferences IDE0007
csharp_style_var_elsewhere = false : silent
csharp_style_var_for_built_in_types = false : silent
csharp_style_var_when_type_is_apparent = true : silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line : silent
csharp_style_expression_bodied_constructors = when_on_single_line : none
csharp_style_expression_bodied_indexers = when_on_single_line : silent
csharp_style_expression_bodied_lambdas = when_on_single_line : silent
csharp_style_expression_bodied_local_functions = when_on_single_line : silent
csharp_style_expression_bodied_methods = when_on_single_line : none
csharp_style_expression_bodied_operators = when_on_single_line : silent
csharp_style_expression_bodied_properties = when_on_single_line : silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Code-block preferences
# IDE0011
csharp_prefer_braces = true : error

csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion

csharp_style_unused_value_assignment_preference = discard_variable:warning

# IDE0058
csharp_style_unused_value_expression_statement_preference = discard_variable : warning

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace : silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### FxCop rules ####

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = none

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = none

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = none

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = none

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = none

# CA1054: Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# CA1055: Uri return values should not be strings
dotnet_diagnostic.CA1055.severity = none

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = none

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = none

# CA1066: Type {0} should implement IEquatable<T> because it overrides Equals
dotnet_diagnostic.CA1066.severity = none

# CA1068: Method '{0}' should take CancellationToken as the last parameter
dotnet_diagnostic.CA1068.severity = none

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = none

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1307: Specify StringComparison
dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = none

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = none

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = warning

# CA1715: Identifiers should have correct prefix
# Package version 2.9.0 and later
dotnet_code_quality.CA1715.exclude_single_letter_type_parameters = true

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = none

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = none

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = none

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = none

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = none

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = none

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = none

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = none

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = none

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = none

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = none

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = none

# CA1825: Avoid zero-length array allocations.
dotnet_diagnostic.CA1825.severity = none

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = none

# CA2200: Rethrow to preserve stack details.
dotnet_diagnostic.CA2200.severity = none

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = none

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = none

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = none

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = none

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = none

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = none

# CA2245: Do not assign a property to itself.
dotnet_diagnostic.CA2245.severity = error

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = none

#### Compiler Rules ####

# CS0105: Using directive appeared previously in this namespace
dotnet_diagnostic.CS0105.severity = warning

# CS0108: Member hides inherited member; missing new keyword
dotnet_diagnostic.CS0108.severity = none

# CS0109: Member does not hide an inherited member; new keyword is not required
dotnet_diagnostic.CS0109.severity = none

# CS0114: Member hides inherited member; missing override keyword
dotnet_diagnostic.CS0114.severity = none

# CS0136 Error CS0136: A local or parameter named '{0}' cannot be declared in this
# scope because that name is used in an enclosing local scope to define a local or parameter
dotnet_diagnostic.CS0136.severity = error

# CS0168: Variable is declared but never used
dotnet_diagnostic.CS0168.severity = none

# CS0169: The field '{0}' is never used
dotnet_diagnostic.CS0169.severity = none

# CS0219: Variable is assigned but its value is never used
dotnet_diagnostic.CS0219.severity = none

# CS0472: The result of the expression is always the same since a value of this type is never equal to 'null'
dotnet_diagnostic.CS0472.severity = none

# CS0612: Type or member is obsolete
dotnet_diagnostic.CS0612.severity = none

# CS0618: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = none

# CS0659: Type overrides Object.Equals(object o) but does not override Object.GetHashCode()
dotnet_diagnostic.CS0659.severity = none

# CS0693: Type parameter has the same name as the type parameter from outer type
dotnet_diagnostic.CS0693.severity = none

# CS1030: #warning directive
dotnet_diagnostic.CS1030.severity = none

# CS1572: XML comment has a param tag for '{0}', but there is no parameter by that name
dotnet_diagnostic.CS1572.severity = none

# CS1573: Parameter '{0}' has no matching param tag in the XML comment for '{1}' (but other parameters do)
dotnet_diagnostic.CS1573.severity = none

# CS1584: XML comment has syntactically incorrect cref attribute
dotnet_diagnostic.CS1584.severity = none

# CS1587: XML comment is not placed on a valid language element
dotnet_diagnostic.CS1587.severity = none

# CS1591: Missing XML comment for publicly visible type or member '{0}'
dotnet_diagnostic.CS1591.severity = none

# CS1658: Unexpected character '{0}'. See also error CS1056.
dotnet_diagnostic.CS1658.severity = none

# CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = none

# CS8321: Local function is declared but never used
dotnet_diagnostic.CS8321.severity = none

#### Visual Studio Rules ####

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = none

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = error

# IDE0050: Convert to tuple
dotnet_diagnostic.IDE0050.severity = none

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = none

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = none

# IDE0071: Simplify interpolation
dotnet_style_prefer_simplified_interpolation = true : none


#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interfaces
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i
dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning

dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.severity = warning

dotnet_naming_rule.constants_should_be_pascal_case.symbols = constant
dotnet_naming_rule.constants_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning

dotnet_naming_rule.private_or_internal_field_should_be_underscore_prefix.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_underscore_prefix.style = underscore_prefix
dotnet_naming_rule.private_or_internal_field_should_be_underscore_prefix.severity = warning

# Symbol specifications

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, method
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.constant.applicable_kinds = field
dotnet_naming_symbols.constant.applicable_accessibilities = *
dotnet_naming_symbols.constant.required_modifiers = const

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private
dotnet_naming_symbols.private_or_internal_field.required_modifiers =

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.underscore_prefix.required_prefix = _
dotnet_naming_style.underscore_prefix.required_suffix =
dotnet_naming_style.underscore_prefix.word_separator =
dotnet_naming_style.underscore_prefix.capitalization = camel_case
